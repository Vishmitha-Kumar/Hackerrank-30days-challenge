DAY 15:
A Node class is provided for you in the editor. A Node object has an integer data field, , and a Node instance pointer, , pointing to another node (i.e.: the next node in the list).

INPUT:
The first line contains T, the number of elements to insert.
Each of the next  lines contains an integer to insert at the end of the list.

STDIN   Function
-----   --------
4       T = 4
2       first data = 2
3
4
1       fourth data = 1

OUTPUT:
2 3 4 1
CODE:
#include <iostream>
#include <cstddef>
using namespace std;	
class Node
{
    public:
        int data;
        Node *next;
        Node(int d){
            data=d;
            next=NULL;
        }
};
class Solution{
    public:

      Node* insert(Node *head,int data)
      {
         if(head== NULL)
         {
             head=new Node(data);
         }
         else{
             Node *curr = head;
             while(curr->next !=NULL)
             {
                 curr = curr->next;
             }
             curr->next = new Node(data);
         }
         return head;
      }

      void display(Node *head)
      {
          Node *start=head;
          while(start)
          {
              cout<<start->data<<" ";
              start=start->next;
          }
      }
};
int main()
{
	Node* head=NULL;
  	Solution mylist;
    int T,data;
    cin>>T;
    while(T-->0){
        cin>>data;
        head=mylist.insert(head,data);
    }	
	mylist.display(head);
		
}